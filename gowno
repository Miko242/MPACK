package pl.miko242.mpack.models;


import org.lwjgl.opengl.GL11;

import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.util.ResourceLocation;
import pl.miko242.mpack.models.basic.WingsModelBase;
import pl.miko242.mpack.modules.Wings3DModule;

public class ItemModel extends WingsModelBase {

    private ModelRenderer rightWing;
    private ModelRenderer leftWing;
    private ResourceLocation wingsImages;

    public void init(int wingID) {
        this.wingsImages = new ResourceLocation("textures/wings/wings" + wingID + ".png");
        this.leftWing = new ModelRenderer(this, 0, 0);
        this.rightWing = new ModelRenderer(this, 0, 0);

        if (Wings3DModule.isEnabled()) {
           for (float i = 0.0F; i < 0.65F; i += 0.05F) {
                this.leftWing.addBox(0.3F, -6F, 1.5F, 0, 32, 32, i);
                this.rightWing.addBox(0.3F, -6F, 1.5F, 0, 32, 32, i);
            }
        } else {
            this.leftWing.addBox(0.3F, -6F, 1.5F, 0, 32, 32, 0.05F);
            this.rightWing.addBox(0.3F, -6F, 1.5F, 0, 32, 32, 0.05F);
        }

        this.leftWing.setRotationPoint(0f, -1f, -1f);
        this.rightWing.setRotationPoint(0f, -1f, -1f);
        this.leftWing.setTextureSize(16,64);
        this.rightWing.setTextureSize(16,64);
    }

    public void render(EntityPlayerSP player, boolean isSneaking) {
        postRender(player, isSneaking);
    }

    private void postRender(EntityPlayerSP player, boolean isSneaking) {
        GL11.glPushMatrix();
        Minecraft.getMinecraft().getTextureManager().bindTexture(this.wingsImages);
        RenderWing(player, player.onGround, isSneaking);

        GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
        GL11.glPopMatrix();
    }

    private void RenderWing(EntityPlayerSP player, boolean isGround, boolean isSneaking) {
        float angle = getWingAngle(60.0F, 8000, player.getYOffset());
        setRotation(this.leftWing, (float) Math.toRadians(-angle - 3.0F));
        setRotation(this.rightWing, (float) Math.toRadians(angle + 3.0F));

        if (isSneaking)  { //obracanie rotacji w gore podczas kucania
            this.leftWing.rotateAngleX = 0.35f;
            this.rightWing.rotateAngleX = 0.35f;
        }

        GL11.glPushMatrix();
        GL11.glTranslatef(0F, 0F, 1.7F * SCALE);
        this.leftWing.render(SCALE);
        this.rightWing.render(SCALE);
        GL11.glPopMatrix();
    }
}
